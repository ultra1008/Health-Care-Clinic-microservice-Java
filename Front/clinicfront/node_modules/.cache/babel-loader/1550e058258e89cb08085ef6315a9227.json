{"ast":null,"code":"export const setStoreUserDetails = userDetails => ({\n  type: 'SET_USER_DETAILS',\n  userDetails\n});\nexport const setStoreUserInformation = userInformation => ({\n  type: 'SET_USER_INFORMATION',\n  userInformation\n}); //USEFUL FUNCTIONS\n\nexport const redirectByRole = (role, props) => {\n  switch (role) {\n    case \"doctor\":\n      props.history.push(\"/doctor\");\n      return;\n\n    case \"assistant\":\n      props.history.push(\"/assistant\");\n      return;\n\n    case \"patient\":\n      props.history.push(\"/patient\");\n      return;\n\n    default:\n      return;\n  }\n};\nexport const getTokenByGivenLoginDetails = (email, password, {\n  setUserDetails\n}) => {\n  const URL = 'http://localhost:8762/auth/login';\n  const user = {\n    \"email\": email,\n    \"password\": password\n  };\n  fetch(URL, {\n    method: 'POST',\n    async: false,\n    body: JSON.stringify(user)\n  }).then(response => response.json()).then(responseData => {\n    setUserDetails({\n      uuid: responseData.uuid,\n      role: responseData.role\n    });\n    localStorage.setItem(\"token\", responseData.token);\n  });\n};\nexport const getInfo = (userUUID, {\n  setUserInformation\n}) => {\n  let URL = 'http://localhost:8762/doctor-mssc/doctors/' + userUUID;\n  const fetchData = fetch(URL, {\n    method: 'GET',\n    async: false,\n    headers: {\n      'Authorization': localStorage.token\n    }\n  });\n  fetchData.then(response => {\n    return response.json();\n  }).then(results => {\n    setUserInformation(results);\n  });\n};","map":{"version":3,"sources":["/home/bq666/Workspace/Clinics-MSSC/Front/clinicfront/src/actions/index.js"],"names":["setStoreUserDetails","userDetails","type","setStoreUserInformation","userInformation","redirectByRole","role","props","history","push","getTokenByGivenLoginDetails","email","password","setUserDetails","URL","user","fetch","method","async","body","JSON","stringify","then","response","json","responseData","uuid","localStorage","setItem","token","getInfo","userUUID","setUserInformation","fetchData","headers","results"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAGC,WAAW,KAAK;AAChDC,EAAAA,IAAI,EAAE,kBAD0C;AAEhDD,EAAAA;AAFgD,CAAL,CAAvC;AAKP,OAAO,MAAME,uBAAuB,GAAGC,eAAe,KAAK;AACvDF,EAAAA,IAAI,EAAE,sBADiD;AAEvDE,EAAAA;AAFuD,CAAL,CAA/C,C,CAKP;;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3C,UAAQD,IAAR;AACI,SAAK,QAAL;AACIC,MAAAA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACA;;AACJ,SAAK,WAAL;AACIF,MAAAA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACA;;AACJ,SAAK,SAAL;AACIF,MAAAA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACA;;AACJ;AACI;AAXR;AAaH,CAdM;AAgBP,OAAO,MAAMC,2BAA2B,GAAI,CAACC,KAAD,EAAQC,QAAR,EAAkB;AAACC,EAAAA;AAAD,CAAlB,KAAuC;AAC/E,QAAMC,GAAG,GAAG,kCAAZ;AACA,QAAMC,IAAI,GAAG;AACT,aAASJ,KADA;AAET,gBAAYC;AAFH,GAAb;AAIAI,EAAAA,KAAK,CAACF,GAAD,EAAM;AACPG,IAAAA,MAAM,EAAE,MADD;AAEPC,IAAAA,KAAK,EAAE,KAFA;AAGPC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHC,GAAN,CAAL,CAKKO,IALL,CAKWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALxB,EAMKF,IANL,CAMWG,YAAD,IAAkB;AACpBZ,IAAAA,cAAc,CAAC;AACXa,MAAAA,IAAI,EAAED,YAAY,CAACC,IADR;AAEXpB,MAAAA,IAAI,EAAEmB,YAAY,CAACnB;AAFR,KAAD,CAAd;AAIAqB,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,YAAY,CAACI,KAA3C;AACH,GAZL;AAaH,CAnBM;AAqBP,OAAO,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAW;AAACC,EAAAA;AAAD,CAAX,KAAoC;AACvD,MAAIlB,GAAG,GAAG,+CAA+CiB,QAAzD;AACA,QAAME,SAAS,GAAGjB,KAAK,CAACF,GAAD,EAAM;AACzBG,IAAAA,MAAM,EAAE,KADiB;AAEzBC,IAAAA,KAAK,EAAE,KAFkB;AAGzBgB,IAAAA,OAAO,EAAE;AACL,uBAAiBP,YAAY,CAACE;AADzB;AAHgB,GAAN,CAAvB;AAOAI,EAAAA,SAAS,CACJX,IADL,CACUC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAHL,EAIKF,IAJL,CAIUa,OAAO,IAAI;AACbH,IAAAA,kBAAkB,CAACG,OAAD,CAAlB;AACH,GANL;AAOH,CAhBM","sourcesContent":["export const setStoreUserDetails = userDetails => ({\n   type: 'SET_USER_DETAILS',\n   userDetails\n});\n\nexport const setStoreUserInformation = userInformation => ({\n    type: 'SET_USER_INFORMATION',\n    userInformation\n});\n\n//USEFUL FUNCTIONS\n\nexport const redirectByRole = (role, props) => {\n    switch (role) {\n        case \"doctor\":\n            props.history.push(\"/doctor\");\n            return;\n        case \"assistant\":\n            props.history.push(\"/assistant\");\n            return;\n        case \"patient\":\n            props.history.push(\"/patient\");\n            return;\n        default:\n            return;\n    }\n};\n\nexport const getTokenByGivenLoginDetails  = (email, password, {setUserDetails}) => {\n    const URL = 'http://localhost:8762/auth/login';\n    const user = {\n        \"email\": email,\n        \"password\": password\n    };\n    fetch(URL, {\n        method: 'POST',\n        async: false,\n        body: JSON.stringify(user)\n    })\n        .then((response) => response.json())\n        .then((responseData) => {\n            setUserDetails({\n                uuid: responseData.uuid,\n                role: responseData.role\n            });\n            localStorage.setItem(\"token\", responseData.token);\n        });\n};\n\nexport const getInfo = (userUUID, {setUserInformation}) => {\n    let URL = 'http://localhost:8762/doctor-mssc/doctors/' + userUUID;\n    const fetchData = fetch(URL, {\n        method: 'GET',\n        async: false,\n        headers: {\n            'Authorization': localStorage.token,\n        }\n    });\n    fetchData\n        .then(response => {\n            return response.json();\n        })\n        .then(results => {\n            setUserInformation(results);\n        });\n};\n"]},"metadata":{},"sourceType":"module"}
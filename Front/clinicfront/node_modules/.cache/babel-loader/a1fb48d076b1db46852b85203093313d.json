{"ast":null,"code":"var _jsxFileName = \"/home/bq666/Workspace/Clinics-MSSC/Front/clinicfront/src/App.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios'; // If you want to run this application you must download axios by this command:\n// npm install axios --save\n\nfunction App() {\n  const [message, setMessage] = useState(null);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, message), React.createElement(\"button\", {\n    onClick: () => connectWithDoctors(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Connect to get message\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => getTokenByGivenLoginDetailsFetch(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Connect to get message\"));\n\n  function connectWithDoctors() {\n    try {\n      getTokenByGivenLoginDetails(); // let givenMessage = getInfoByGivenToken();\n      // setMessage(tokenForLogin);\n    } catch (e) {\n      console.log(e);\n      setMessage(\"Nothing\");\n    }\n  }\n\n  function getTokenByGivenLoginDetails(username = \"jan\", password = \"12345\") {\n    const URL = 'http://localhost:8762/auth/login';\n    axios({\n      url: 'http://localhost:8762/auth/login',\n      method: 'POST',\n      async: false,\n      crossDomain: true,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json;charset=UTF-8'\n      },\n      username: 'jan',\n      password: '12345'\n    }).then(respone => {\n      console.log(respone.status);\n    });\n  }\n\n  function getTokenByGivenLoginDetailsFetch(username = \"jan\", password = \"12345\") {\n    const URL = 'http://localhost:8762/auth/login';\n    const user = {\n      \"username\": \"jan\",\n      \"password\": \"12345\"\n    };\n    fetch(URL, {\n      method: 'POST',\n      async: false,\n      body: JSON.stringify(user)\n    }).then(results => results.json()).then(results => {\n      console.log(\"---> \" + results.Authorization);\n      const fetchData = fetch('http://localhost:8762/doctor/doctors', {\n        method: 'GET',\n        async: false,\n        headers: {\n          'Authorization': results.Authorization\n        }\n      });\n      fetchData.then(resoults => {\n        console.log(resoults.text());\n      }).then(resoults => JSON.parse(results)).then(results => {\n        console.log(\"---> \" + results);\n      });\n    });\n  }\n\n  function getInfoByGivenToken() {}\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bq666/Workspace/Clinics-MSSC/Front/clinicfront/src/App.js"],"names":["React","useState","axios","App","message","setMessage","connectWithDoctors","getTokenByGivenLoginDetailsFetch","getTokenByGivenLoginDetails","e","console","log","username","password","URL","url","method","async","crossDomain","headers","then","respone","status","user","fetch","body","JSON","stringify","results","json","Authorization","fetchData","resoults","text","parse","getInfoByGivenToken"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\n\n// If you want to run this application you must download axios by this command:\n// npm install axios --save\nfunction App() {\n    const [message, setMessage] = useState(null);\n\n    return(\n        <div>\n            <p>{message}</p>\n            <button onClick={() => connectWithDoctors()}>\n                Connect to get message\n            </button><br/><br/><br/>\n            <button onClick={() => getTokenByGivenLoginDetailsFetch()}>\n                Connect to get message\n            </button>\n        </div>\n    );\n\n    function connectWithDoctors() {\n        try {\n            getTokenByGivenLoginDetails();\n            // let givenMessage = getInfoByGivenToken();\n            // setMessage(tokenForLogin);\n        }catch (e) {\n            console.log(e);\n            setMessage(\"Nothing\");\n        }\n    }\n\n    function getTokenByGivenLoginDetails(username = \"jan\", password = \"12345\"){\n        const URL = 'http://localhost:8762/auth/login';        \n\n        axios({\n            url: 'http://localhost:8762/auth/login',\n            method: 'POST',            \n            async: false,\n            crossDomain: true,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            username: 'jan',\n            password: '12345'\n        }).then(respone => {console.log(respone.status)});\n    }\n    \n    \n    \n    function getTokenByGivenLoginDetailsFetch(username = \"jan\", password = \"12345\"){\n        const URL = 'http://localhost:8762/auth/login';\n        const user = {\n            \"username\": \"jan\",\n            \"password\": \"12345\"\n        };\n        fetch(URL, {\n            method: 'POST',\n            async: false,\n            body: JSON.stringify(user)\n        })\n            .then(results => results.json())\n            .then(results => {\n                console.log(\"---> \" + results.Authorization);\n                const fetchData = fetch('http://localhost:8762/doctor/doctors', {\n                    method: 'GET',\n                    async: false,\n                    headers: {\n                    'Authorization': results.Authorization\n                    }\n                });\n                fetchData.then(resoults => {console.log(resoults.text())})\n                    .then(resoults => JSON.parse(results))\n                    .then(results => {\n                        console.log(\"---> \" + results);\n                    });\n\n            });\n    }\n    \n\n    function getInfoByGivenToken(){\n\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}